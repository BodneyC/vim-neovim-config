!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$TERMTHEME	nvim/init.vim	/^  let $TERMTHEME = 'dark'$/;"	v
'.handle_large_file	nvim/lua/cfg/interface.lua	/^    au BufReadPre  *        lua require'mod.functions'.handle_large_file()$/;"	f
0	nvim/vsnip/python.json	/^    "body": [ "#!\/usr\/bin\/env python${1:3}" ],$/;"	s	array:shebang.body
0	nvim/vsnip/python.json	/^    "prefix": ["#!", "\/usr"],$/;"	s	array:shebang.prefix
0	nvim/vsnip/vim.json	/^    "body": [ "$LINE_COMMENT vim: et ts=${1:2} sw=$1" ],$/;"	s	array:magic.body
0	nvim/vsnip/vim.json	/^    "body": [ "let ${1:g}:$2 = get($1:, \\"$2\\", \\"\\")" ],$/;"	s	array:get.body
0	nvim/vsnip/vim.json	/^    "prefix": ["get"],$/;"	s	array:get.prefix
0	nvim/vsnip/vim.json	/^    "prefix": ["vim:"],$/;"	s	array:magic.prefix
1	nvim/vsnip/python.json	/^    "prefix": ["#!", "\/usr"],$/;"	s	array:shebang.prefix
<2-LeftMouse>	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> <2-LeftMouse>$/;"	m
<CR>	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> <CR>$/;"	m
<Leader>F	nvim/ftplugin/json.vim	/^nnoremap <silent> <Leader>F :SortJSON<CR>$/;"	m
<LocalLeader>%	nvim/ftplugin/vue.vim	/^nnoremap <buffer> <LocalLeader>% :call <SID>TagMatch1()<Cr>$/;"	m
<LocalLeader>%	nvim/ftplugin/vue.vim	/^vnoremap <buffer> <LocalLeader>% <Esc>:call <SID>VisualTag()<Cr>$/;"	m
<LocalLeader>.	nvim/ftplugin/vue.vim	/^    inoremap <buffer> <LocalLeader>. >$/;"	m
<LocalLeader>5	nvim/ftplugin/vue.vim	/^nnoremap <buffer> <LocalLeader>5 :call <SID>TagMatch1()<Cr>$/;"	m
<LocalLeader>5	nvim/ftplugin/vue.vim	/^vnoremap <buffer> <LocalLeader>5 <Esc>:call <SID>VisualTag()<Cr>$/;"	m
<LocalLeader><LocalLeader>	nvim/ftplugin/vue.vim	/^inoremap <buffer> <LocalLeader><LocalLeader> <Esc>:call <SID>EditFromJump()<Cr>$/;"	m
<LocalLeader><LocalLeader>	nvim/ftplugin/vue.vim	/^nnoremap <buffer> <LocalLeader><LocalLeader> :call <SID>EditFromJump()<Cr>$/;"	m
<LocalLeader>>	nvim/ftplugin/vue.vim	/^    inoremap <buffer> <LocalLeader>> >$/;"	m
<LocalLeader>c	nvim/ftplugin/vue.vim	/^    vmap <buffer> <LocalLeader>c <Plug>(XMLEditWrapComment)$/;"	m
<LocalLeader>d	nvim/ftplugin/vue.vim	/^nnoremap <buffer> <LocalLeader>d :call <SID>DeleteTag()<Cr>$/;"	m
<LocalLeader>u	nvim/ftplugin/vue.vim	/^    vmap <buffer> <LocalLeader>u <Plug>(XMLEditUnwrapComment)$/;"	m
<LocalLeader>w	nvim/ftplugin/vue.vim	/^nnoremap <buffer> <LocalLeader>w :call <SID>ClearJumpMarks()<Cr>$/;"	m
<LocalLeader>x	nvim/ftplugin/vue.vim	/^vnoremap <buffer> <LocalLeader>x "xx:call <SID>WrapTag(@x)<Cr>$/;"	m
<Plug>(XMLEditUnwrapComment)	nvim/ftplugin/vue.vim	/^vnoremap <buffer> <Plug>(XMLEditUnwrapComment) <Esc>:call <SID>DecreaseCommentLevel()<CR>$/;"	m
<Plug>(XMLEditWrapComment)	nvim/ftplugin/vue.vim	/^vnoremap <buffer> <Plug>(XMLEditWrapComment) <Esc>:call <SID>IncreaseCommentLevel()<CR>$/;"	m
<Space>	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select')$/;"	m
<leader>S	nvim/ftplugin/markdown.vim	/^nnoremap <leader>S 1z=$/;"	m
>	nvim/ftplugin/vue.vim	/^    inoremap <buffer> > <Esc>:call <SID>InsertGt()<Cr>$/;"	m
A	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> A defx#do_action('new_directory')$/;"	m
C	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> C defx#do_action('move')$/;"	m
GetGroovyIndent	nvim/indent/groovy.vim	/^func GetGroovyIndent()$/;"	f
M.SetSignTheme	nvim/lua/mod/highlight.lua	/^function M.SetSignTheme(bg)$/;"	f
M.additional_highlights	nvim/lua/mod/highlight.lua	/^function M.additional_highlights()$/;"	f
M.border_box	nvim/lua/mod/terminal.lua	/^function M.border_box(h, w, c, r)$/;"	f
M.change_indent	nvim/lua/mod/functions.lua	/^function M.change_indent(n)$/;"	f
M.close_if_term_job	nvim/lua/mod/terminal.lua	/^function M.close_if_term_job()$/;"	f
M.command	nvim/lua/utl/util.lua	/^function M.command(lhs, rhs, opts)$/;"	f
M.dir_exists	nvim/lua/utl/fs.lua	/^function M.dir_exists(fn)$/;"	f
M.elem_in_array	nvim/lua/utl/util.lua	/^function M.elem_in_array(a, e)$/;"	f
M.file_exists	nvim/lua/utl/fs.lua	/^function M.file_exists(fn)$/;"	f
M.file_info	nvim/lua/mod/airline.lua	/^function M.file_info()$/;"	f
M.files	nvim/lua/mod/fzf.lua	/^function M.files(q)$/;"	f
M.floating_centred	nvim/lua/mod/terminal.lua	/^function M.floating_centred(...)$/;"	f
M.floating_help	nvim/lua/mod/terminal.lua	/^function M.floating_help(...)$/;"	f
M.floating_man	nvim/lua/mod/terminal.lua	/^function M.floating_man(...)$/;"	f
M.floating_term	nvim/lua/mod/terminal.lua	/^function M.floating_term(...)$/;"	f
M.fsize	nvim/lua/utl/fs.lua	/^function M.fsize(fn)$/;"	f
M.go_to_definition	nvim/lua/utl/util.lua	/^function M.go_to_definition()$/;"	f
M.handle_large_file	nvim/lua/mod/functions.lua	/^function M.handle_large_file()$/;"	f
M.highlight_under_cursor	nvim/lua/mod/functions.lua	/^function M.highlight_under_cursor()$/;"	f
M.hover_match	nvim/lua/mod/highlight.lua	/^function M.hover_match()$/;"	f
M.init	nvim/lua/mod/airline.lua	/^function M.init()$/;"	f
M.init	nvim/lua/mod/defx.lua	/^function M.init()$/;"	f
M.init	nvim/lua/mod/highlight.lua	/^function M.init()$/;"	f
M.init	nvim/lua/mod/pear-tree.lua	/^function M.init()$/;"	f
M.init	nvim/lua/mod/quickui.lua	/^function M.init()$/;"	f
M.init	nvim/lua/mod/terminal.lua	/^function M.init()$/;"	f
M.match_over	nvim/lua/mod/functions.lua	/^function M.match_over(...)$/;"	f
M.mode	nvim/lua/mod/airline.lua	/^function M.mode()$/;"	f
M.modified	nvim/lua/mod/airline.lua	/^function M.modified()$/;"	f
M.next_term_split	nvim/lua/mod/terminal.lua	/^function M.next_term_split(b)$/;"	f
M.nvim_lsp	nvim/lua/mod/airline.lua	/^function M.nvim_lsp()$/;"	f
M.open	nvim/lua/mod/defx.lua	/^function M.open()$/;"	f
M.pear_tree_close	nvim/lua/mod/pear-tree.lua	/^function M.pear_tree_close(c)$/;"	f
M.resize_window	nvim/lua/utl/util.lua	/^function M.resize_window(d)$/;"	f
M.rg	nvim/lua/mod/fzf.lua	/^function M.rg(q, b)$/;"	f
M.rg_under_cursor	nvim/lua/mod/fzf.lua	/^function M.rg_under_cursor()$/;"	f
M.run_cmd	nvim/lua/mod/fzf.lua	/^function M.run_cmd(cmd)$/;"	f
M.set_indent	nvim/lua/mod/functions.lua	/^function M.set_indent(n)$/;"	f
M.show_documentation	nvim/lua/utl/util.lua	/^function M.show_documentation()$/;"	f
M.spell_checker	nvim/lua/mod/functions.lua	/^function M.spell_checker()$/;"	f
M.term_split	nvim/lua/mod/terminal.lua	/^function M.term_split(b)$/;"	f
M.toggle_bool_option	nvim/lua/utl/util.lua	/^function M.toggle_bool_option(scope, opt)$/;"	f
M.zoom_toggle	nvim/lua/mod/functions.lua	/^function M.zoom_toggle()$/;"	f
O	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer> O$/;"	m
R	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> R defx#redraw()$/;"	m
SkipGroovyBlanksAndComments	nvim/indent/groovy.vim	/^func! SkipGroovyBlanksAndComments(startline)$/;"	f
SortJSON	nvim/ftplugin/json.vim	/^command! -nargs=0 SortJSON :%!grep -v '^[\\t ]*\/\/' | jq --indent 2 -S '.'$/;"	c
Vim and Neovim Configuration Files	README.md	/^Vim and Neovim Configuration Files$/;"	c
Y	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> Y defx#do_action('yank_path')$/;"	m
["[M"]	nvim/lua/cfg/ts.lua	/^        ["[M"] = "@function.outer",$/;"	f
["[m"]	nvim/lua/cfg/ts.lua	/^        ["[m"] = "@function.outer",$/;"	f
["]M"]	nvim/lua/cfg/ts.lua	/^        ["]M"] = "@function.outer",$/;"	f
["]m"]	nvim/lua/cfg/ts.lua	/^        ["]m"] = "@function.outer",$/;"	f
\x21	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')$/;"	m
]	nvim/lua/cfg/airline.lua	/^vim.fn['airline#parts#define_function']('FileInfo', 'AlFileInfo')$/;"	f
]	nvim/lua/cfg/airline.lua	/^vim.fn['airline#parts#define_function']('Mode', 'AlMode')$/;"	f
]	nvim/lua/cfg/airline.lua	/^vim.fn['airline#parts#define_function']('Modified', 'AlModified')$/;"	f
]	nvim/lua/cfg/airline.lua	/^vim.fn['airline#parts#define_function']('NvimLsp', 'AlNvimLsp')$/;"	f
__XML__	nvim/ftplugin/vue.vim	/^augroup __XML__$/;"	a
_msg_exit	softlink-config.sh	/^_msg_exit() { # msg[, ret_val]$/;"	f
_process	softlink-config.sh	/^_process() {$/;"	f
_yes_or_no	softlink-config.sh	/^_yes_or_no() { # msg$/;"	f
a	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> a defx#do_action('new_file')$/;"	m
b:current_syntax	nvim/syntax/kitty-conf.vim	/^let b:current_syntax = 'kitty-conf'$/;"	v
b:did_indent	nvim/indent/groovy.vim	/^let b:did_indent = 1$/;"	v
b:last_wrap_atts_used	nvim/ftplugin/vue.vim	/^let b:last_wrap_atts_used = ""$/;"	v
b:last_wrap_tag_used	nvim/ftplugin/vue.vim	/^let b:last_wrap_tag_used = ""$/;"	v
b:undo_indent	nvim/indent/groovy.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
body	nvim/vsnip/python.json	/^    "body": [ "#!\/usr\/bin\/env python${1:3}" ],$/;"	a	object:shebang
body	nvim/vsnip/vim.json	/^    "body": [ "$LINE_COMMENT vim: et ts=${1:2} sw=$1" ],$/;"	a	object:magic
body	nvim/vsnip/vim.json	/^    "body": [ "let ${1:g}:$2 = get($1:, \\"$2\\", \\"\\")" ],$/;"	a	object:get
c	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> c defx#do_action('copy')$/;"	m
center	nvim/lua/cfg/startify.lua	/^local function center(txt)$/;"	f
dd	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> dd defx#do_action('call', '<SID>defx_rem_rm')$/;"	m
description	nvim/vsnip/python.json	/^    "description": "Python shebang"$/;"	s	object:shebang
description	nvim/vsnip/vim.json	/^    "description": "Call to get"$/;"	s	object:get
description	nvim/vsnip/vim.json	/^    "description": "Magicline"$/;"	s	object:magic
edge_of_screen	nvim/lua/utl/util.lua	/^local function edge_of_screen(d)$/;"	f
g:lightline#colorscheme#1989#palette	nvim/autoload/lightline/colorscheme/1989.vim	/^let g:lightline#colorscheme#1989#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#VimSpectre300light#palette	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let g:lightline#colorscheme#VimSpectre300light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:polyglot_disabled	nvim/init.vim	/^let g:polyglot_disabled = ['autoindent']$/;"	v
g:python3_host_prog	nvim/init.vim	/^let g:python3_host_prog = systemlist('command -v python3')[0]$/;"	v
g:python_host_prog	nvim/init.vim	/^let g:python_host_prog = systemlist('command -v python2')[0]$/;"	v
get	nvim/vsnip/vim.json	/^  "get": {$/;"	o
get_open_term_buffer_name	nvim/lua/mod/terminal.lua	/^local function get_open_term_buffer_name()$/;"	f
gl	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> gl$/;"	m
h	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> h defx#do_action('close_tree')$/;"	m
init	nvim/lua/cfg/startify.lua	/^  init = function()$/;"	f
l	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> l$/;"	m
location_callback	nvim/lua/cfg/lsp.lua	/^local function location_callback(_, method, result)$/;"	f
magic	nvim/vsnip/vim.json	/^  "magic": {$/;"	o
o	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> o$/;"	m
o	nvim/ftplugin/markdown.vim	/^nnoremap o A<CR>$/;"	m
on_attach	nvim/lua/cfg/lsp.lua	/^local on_attach = function(client, bufnr)$/;"	f
on_term_exit	nvim/lua/mod/terminal.lua	/^local function on_term_exit(_, code, _)$/;"	f
p	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> p defx#do_action('paste')$/;"	m
prefix	nvim/vsnip/python.json	/^    "prefix": ["#!", "\/usr"],$/;"	a	object:shebang
prefix	nvim/vsnip/vim.json	/^    "prefix": ["get"],$/;"	a	object:get
prefix	nvim/vsnip/vim.json	/^    "prefix": ["vim:"],$/;"	a	object:magic
q	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> q defx#do_action('quit')$/;"	m
r	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> r defx#do_action('rename')$/;"	m
run_vim_cmd	install.sh	/^run_vim_cmd() {$/;"	f
s:BuildTagName	nvim/ftplugin/vue.vim	/^func s:BuildTagName( )$/;"	f
s:Callback	nvim/ftplugin/vue.vim	/^func s:Callback( xml_tag, isHtml )$/;"	f
s:ClearJumpMarks	nvim/ftplugin/vue.vim	/^func s:ClearJumpMarks( )$/;"	f
s:DecreaseCommentLevel	nvim/ftplugin/vue.vim	/^func s:DecreaseCommentLevel( )$/;"	f
s:DeleteTag	nvim/ftplugin/vue.vim	/^func s:DeleteTag( )$/;"	f
s:EditFromJump	nvim/ftplugin/vue.vim	/^func s:EditFromJump( )$/;"	f
s:GetCurrentTag	nvim/ftplugin/vue.vim	/^	func s:GetCurrentTag()$/;"	f
s:IncreaseCommentLevel	nvim/ftplugin/vue.vim	/^func s:IncreaseCommentLevel( )$/;"	f
s:InitEditFromJump	nvim/ftplugin/vue.vim	/^func s:InitEditFromJump( )$/;"	f
s:InsertGt	nvim/ftplugin/vue.vim	/^func s:InsertGt( )$/;"	f
s:IsParsableTag	nvim/ftplugin/vue.vim	/^func s:IsParsableTag( tag )$/;"	f
s:MisMatchedTag	nvim/ftplugin/vue.vim	/^func s:MisMatchedTag( id, tag )$/;"	f
s:MoveCursor	nvim/ftplugin/vue.vim	/^	func s:MoveCursor()$/;"	f
s:NewFileXML	nvim/ftplugin/vue.vim	/^func s:NewFileXML( )$/;"	f
s:ParseTag	nvim/ftplugin/vue.vim	/^func s:ParseTag( )$/;"	f
s:Strlen	nvim/ftplugin/vue.vim	/^func s:Strlen(text)$/;"	f
s:TagMatch1	nvim/ftplugin/vue.vim	/^func s:TagMatch1()$/;"	f
s:TagMatch2	nvim/ftplugin/vue.vim	/^func s:TagMatch2(tag,endtag)$/;"	f
s:VisualTag	nvim/ftplugin/vue.vim	/^func s:VisualTag( )$/;"	f
s:WrapTag	nvim/ftplugin/vue.vim	/^func s:WrapTag(text)$/;"	f
s:add_to_rtp	nvim/init.vim	/^func! s:add_to_rtp(p, back)$/;"	f
s:background	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:background     = s:magenta$/;"	v
s:background	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:background     = '#f0fdf0'$/;"	v
s:blue	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:blue         = '#afffff'$/;"	v
s:blue	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:blue         = '#4286c9'$/;"	v
s:defx_rem_prev	nvim/ftplugin/defx.vim	/^let s:defx_rem_prev = []$/;"	v
s:defx_rem_rm	nvim/ftplugin/defx.vim	/^func! s:defx_rem_rm(ctx) abort$/;"	f
s:defx_rem_rs	nvim/ftplugin/defx.vim	/^func! s:defx_rem_rs(ctx) abort$/;"	f
s:error	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:error          = '#ffafdf'$/;"	v
s:error	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:error          = '#ffafdf'$/;"	v
s:foreground	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:foreground     = '#000000'$/;"	v
s:foreground	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:foreground     = '#7d5e7d'$/;"	v
s:green	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:green        = '#afffd7'$/;"	v
s:green	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:green        = '#699e34'$/;"	v
s:inactive_dark	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:inactive_dark  = '#ded1e0'$/;"	v
s:inactive_dark	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:inactive_dark  = '#ded1e0'$/;"	v
s:inactive_light	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:inactive_light = '#d8c3db'$/;"	v
s:inactive_light	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:inactive_light = '#d8c3db'$/;"	v
s:magenta	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:magenta      = '#8f8f87'$/;"	v
s:magenta	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:magenta      = '#7d5e7d'$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.inactive.left   = [$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.inactive.middle = [[ s:inactive_dark,s:inactive_dark]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.inactive.right  = s:p.inactive.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.insert.left     = [$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.insert.right    = s:p.insert.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.normal.error    = [[ s:background, s:error ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.normal.left     = [$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.normal.middle   = [[ s:background, s:background ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.normal.right    = s:p.normal.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.normal.warning  = [[ s:background, s:green ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.replace.left    = [$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.replace.right   = s:p.replace.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.tabline.left    = [[ s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.tabline.middle  = [[ s:tabline_bg, s:tabline_bg ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.tabline.right   = s:p.normal.right$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.tabline.tabsel  = [[ s:tabline_active_fg, s:tabline_active_bg ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.visual.left     = [$/;"	v
s:p	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:p.visual.right    = s:p.visual.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.inactive.left   = [ [ s:foreground, s:inactive_light ], [ s:foreground, s:inactive_light/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.inactive.middle = [ [ s:inactive_dark,s:inactive_dark], ]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.inactive.right  = s:p.inactive.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.insert.left     = [ [ s:background, s:blue ], [ s:statusline_active_fg, s:purple ], [ s:/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.insert.right    = s:p.insert.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.normal.error    = [ [ s:background, s:error ] ]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.normal.left     = [ [ s:background, s:foreground ], [ s:statusline_active_fg, s:purple ]/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.normal.middle   = [ [ s:foreground, s:foreground ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.normal.right    = s:p.normal.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.normal.warning  = [ [ s:background, s:green ] ]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.replace.left    = [ [ s:background, s:pink ], [s:statusline_active_fg, s:purple ], [ s:s/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.replace.right   = s:p.replace.left$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.tabline.left    = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.tabline.middle  = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.tabline.right   = s:p.normal.right$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.tabline.tabsel  = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.visual.left     = [ [ s:background, s:purple ], [s:statusline_active_fg, s:purple ], [ s/;"	v
s:p	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:p.visual.right    = s:p.visual.left$/;"	v
s:pink	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:pink         = '#ffafdf'$/;"	v
s:pink	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:pink         = '#c26e84'$/;"	v
s:purple	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:purple       = '#dfafff'$/;"	v
s:purple	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:purple       = '#8959a8'$/;"	v
s:purple_light	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:purple_light = '#ffdfff'$/;"	v
s:purple_light	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:purple_light = '#b86ab4'$/;"	v
s:statusline_active_bg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:statusline_active_bg = s:magenta$/;"	v
s:statusline_active_bg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:statusline_active_bg = s:magenta$/;"	v
s:statusline_active_fg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_active_fg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:tabline_active_bg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:tabline_active_bg   = s:window$/;"	v
s:tabline_active_bg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:tabline_active_bg   = s:window$/;"	v
s:tabline_active_fg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:tabline_active_fg   = s:foreground$/;"	v
s:tabline_active_fg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:tabline_active_fg   = s:foreground$/;"	v
s:tabline_bg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:tabline_bg          = s:magenta$/;"	v
s:tabline_bg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:tabline_bg          = s:magenta$/;"	v
s:tabline_inactive_bg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:tabline_inactive_bg = s:purple_light$/;"	v
s:tabline_inactive_bg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:tabline_inactive_bg = s:purple_light$/;"	v
s:tabline_inactive_fg	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabline_inactive_fg	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:window	nvim/autoload/lightline/colorscheme/1989.vim	/^let s:window         = '#efefef'$/;"	v
s:window	nvim/autoload/lightline/colorscheme/VimSpectre300light.vim	/^let s:window         = '#efefef'$/;"	v
shebang	nvim/vsnip/python.json	/^  "shebang": {$/;"	o
tab_string	nvim/lua/cfg/lsp.lua	/^local function tab_string(e, k)$/;"	f
u	nvim/ftplugin/defx.vim	/^nnoremap <silent><buffer><expr> u defx#do_action('call', '<SID>defx_rem_rs')$/;"	m
vim.lsp.callbacks['textDocument/hover']	nvim/lua/cfg/lsp.lua	/^vim.lsp.callbacks['textDocument\/hover'] = function(_, method, result)$/;"	f
vim_run_all_lines_separately	nvim/lua/utl/util.lua	/^local function vim_run_all_lines_separately(s)$/;"	f
